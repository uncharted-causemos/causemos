@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/_vendor-prefixes.scss";
@import "~bootstrap-sass/assets/stylesheets/bootstrap/mixins/_forms.scss";

*,
:after,
:before {
  box-sizing: border-box;
}

html {
  font-size: 10px;
}

body {
  margin: 0;
  font-family: Source Sans Pro,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;
  font-size: 14px;
  line-height: 1.42857;
  color: rgba(0,0,0,.89);
  background-color: #f2f2f2;
  -webkit-font-smoothing: antialiased; /* Chrome, Safari */
  -moz-osx-font-smoothing: grayscale; /* Firefox */
}

h5 {
  font-size: 18px;
  margin: 0;
}

/*
  This file contains styles to override or reset the appearance
  of native elements (like removing margins from <hr>) and elements
  imported from custom stylesheets (like setting the colours used
  in the toaster-message library we're using).

  These styles are applied globally.

  If you only want to adjust some instances of an element, or if your
  element will have non-default behaviour, consider making a new
  component in `@/components/widgets/` with scoped styles instead.
*/

.form-control {
  border: 1px solid lightgray;
  box-shadow: none;
  &:focus {
    border: 1px solid $label-color;
    outline: none;
    box-shadow: none;
    border-radius: 2px;
  }
  &::placeholder {
    color: lightgray;
  }
}

// Base styles
// --------------------------------------------------
.table,
.alert,
p {
  a {
    text-decoration: underline;
  }
}

table,
.table {
  // Cells
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        border-left: 0;
        border-right: 0;
      }
    }
  }
  > thead {
    > tr {
      > th,
      > td {
        background-color: white;
      }
    }
  }
  // Bottom align for column headings
  > thead > tr > th {
    vertical-align: bottom;
    border-bottom: 2px solid $separator;
  }
}

hr {
  margin: 0;
  border: 0;
  border-top: 1px solid #e3e3e3;
}

input {
  -webkit-appearance: none;
  appearance: none;

  &:focus {
    outline: none;

    &::-webkit-slider-thumb {
      border: 2px solid $selected;
    }
  }
}

input::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  background: #ffffff;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  margin-top: -4px;
  border: 2px solid #4E4E54;
  cursor: pointer;
}

input::-webkit-slider-runnable-track {
  background: #4E4E54;
  width: 100px;
  height: 8px;
  border-radius: 8px;
}

.fa-check-square-o::before {
  // HACK: reduce the visible shift when you
  //  check a checkbox
  margin-left: 2px;
}

.btn-call-for-action, .btn-call-for-action:active {
  background: $call-for-action-gradient;
}


// Overrides style for closing button in vue-toasted
.toasted.toasted-primary.error {
  a {
    font-size: inherit;
    color: #EEE;
  }
}

// Lex overrides
//  These need to be global because lex-assistant-box is created directly as a
//  child of the <body> element, so :deep scoped styles can't access it.
@import '~@uncharted.software/lex/dist/lex.scss';

// Need `div.lex-assistant-box` instead of just `.lex-assistant-box` to have
//  higher specificity than the default lex styles.
div.lex-assistant-box {
  z-index: 99;
  max-width: 50vw !important; // lex sets this style in-line and require important flag
  border-radius: 4px; // Match dropdown-control
  box-shadow: 0 -1px 0 #e5e5e5, 0 0 2px rgba(0,0,0,.12), 0 2px 4px rgba(0,0,0,.24);
  overflow: hidden;
  .selectable { // this is backup just in case we have a really long identifier
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  ul li {
    color: $text-color-dark; // Override lex styles
    padding: 8px 12px; // Match dropdown-control
  }

  ul li.selectable.active {
    background-color: #EAEBEC; // Match dropdown-control
    color: $text-color-dark; // Override lex styles
  }
}
