{
  "$id": "https://github.com/uncharted-causemos/docs/blob/model-schemas/datacubes/model.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "description": "World Modelers Model Metadata Schema",
  "required": [
    "id",
    "name",
    "family_name",
    "description",
    "maintainer",
    "category",
    "parameters",
    "outputs"
  ],
  "title": "Model Metadata Schema",
  "type": "object",
  "properties": {
    "id": {
      "$id": "#/properties/id",
      "title": "Model ID",
      "description": "A unique model id",
      "type": "string",
      "examples": [
        "123e4567-e89b-12d3-a456-426614174000"
      ]
    },
    "name": {
      "$id": "#/properties/name",
      "title": "Model Name",
      "description": "The model name",
      "type": "string",
      "examples": [
        "DSSAT-PYTHIA"
      ]
    },
    "family_name": {
      "$id": "#/properties/name",
      "title": "Model Family Name",
      "description": "The model family name",
      "type": "string",
      "examples": [
        "DSSAT"
      ]
    },
    "description": {
      "$id": "#/properties/description",
      "title": "Model Description",
      "description": "The description of the model.",
      "type": "string",
      "examples": [
        "The Decision Support System for Agrotechnology Transfer (DSSAT) comprises dynamic crop growth simulation model for over 40 crops. The model simulates growth development; and yield as a function of the soil-plant-atmosphere dynamics."
      ]
    },
    "created_at": {
      "$id": "#/properties/created_at",
      "title": "Model Registration Time",
      "description": "When the model was registered",
      "type": "integer",
      "examples": [
        1234567890000
      ]
    },
    "category": {
      "$id": "#/properties/category",
      "title": "Categories",
      "description": "List of categories",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": [
        [
          "Economic",
          "Agricultural"
        ]
      ]
    },
    "maintainer": {
      "$id": "#/properties/maintainer",
      "title": "Model Maintainer",
      "description": "Information about the model maintainer.",
      "$ref": "#/definitions/maintainer",
      "additionalProperties": false
    },
    "observed_data": {
      "$id": "#/properties/observed_data",
      "title": "Observed Data",
      "description": "A list of Cube IDs that represent observed data for this model",
      "type": "array",
      "items": {
        "$ref": "./model-run.schema.json#/properties/id"
      }
    },
    "is_stochastic": {
      "$id": "#/properties/is_stochastic",
      "title": "Is the model stochastic",
      "description": "Is the model stochastic",
      "type": "boolean",
      "default": false
    },
    "parameters": {
      "$id": "#/properties/parameters",
      "title": "Model Parameters",
      "description": "The parameters exposed for the model",
      "type": "array",
      "items": {
        "$ref": "#/definitions/parameter"
      }
    },
    "outputs": {
      "$id": "#/properties/outputs",
      "title": "Model Outputs",
      "description": "An array of model outputs",
      "type": "array",
      "items": {
        "$ref": "#/definitions/output"
      }
    },
    "qualifier_outputs": {
      "$id": "#/properties/qualifier_outputs",
      "title": "Model Qualifier Outputs",
      "description": "An array describing the additional qualifier columns in the output data files",
      "type": "array",
      "items": {
        "$ref": "#/definitions/qualifier_output"
      }
    },
    "tags": {
      "$id": "#/properties/tags",
      "title": "Model Tags",
      "description": "The tags associated with the model.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": [
        [
          "Agriculture"
        ]
      ]
    },
    "geography": {
      "$id": "#/properties/geography",
      "title": "Geography",
      "description": "Information about the geography covered by the model",
      "$ref": "#/definitions/geography"
    },
    "period": {
      "$id": "#/properties/period",
      "title": "Run time period",
      "description": "Data ranges covered by the run",
      "$ref": "#/definitions/period"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "parameter": {
      "$id": "#/definitions/parameter",
      "type": "object",
      "required": [
        "name",
        "display_name",
        "description",
        "type",
        "data_type",
        "default"
      ],
      "properties": {
        "name": {
          "$id": "#/definitions/parameter/name",
          "title": "Parameter Name",
          "description": "The name of the parameter",
          "type": "string",
          "examples": [
            "management_practice"
          ]
        },
        "display_name": {
          "$id": "#/definitions/parameter/display_name",
          "title": "Parameter Display Name",
          "description": "The user visible name of the parameter",
          "type": "string",
          "examples": [
            "Management Practice"
          ]
        },
        "description": {
          "$id": "#/definitions/parameter/description",
          "title": "Parameter Description",
          "description": "The description of the parameter",
          "type": "string",
          "examples": [
            "The management practice to model. rf_highN corresponds to a high nitrogen management  practice. irrig corresponds to a high nitrogen, irrigated management practice. rf_0N  corresponds to a subsistence management practice. rf_lowN corresponds to a low nitrogen  managemet practice."
          ]
        },
        "type": {
          "$id": "#/definitions/parameter/type",
          "title": "Parameter Type",
          "description": "The type of parameter",
          "enum": [
            "int",
            "float",
            "str",
            "boolean",
            "datetime",
            "lat",
            "lng"
          ]
        },
        "unit": {
          "$id": "#/definitions/parameter/unit",
          "title": "Unit",
          "description": "The unit of the parameter value",
          "type": "string",
          "examples": [
            "degC"
          ]
        },
        "unit_description": {
          "$id": "#/definitions/parameter/unit_description",
          "title": "Unit Description",
          "description": "A short description of the unit",
          "type": "string",
          "examples": [
            "degrees Celcius"
          ]
        },
        "ontologies": {
          "$id": "#/definitions/parameter/ontologies",
          "title": "Ontology Components",
          "description": "The three ontological parts representing the concepts matched to this varible",
          "$ref": "#/definitions/ontology_components"
        },
        "is_drilldown": {
          "$id": "#/definitions/parameter/is_drilldown",
          "title": "Is Drilldown?",
          "description": "Does this variable represent a drilldown",
          "type": "boolean",
          "examples": [
            true
          ]
        },
        "additional_options": {
          "$id": "#/definitions/parameter/additional_options",
          "title": "Additional Options",
          "description": "Model specific extras",
          "type": "object",
          "additionalProperties": false
        },
        "data_type": {
          "$id": "#/definitions/parameter/data_type",
          "title": "Data Value Type",
          "description": "Describes whether the data values will be categorical, ordered, or numerical",
          "enum": [
            "nominal",
            "ordinal",
            "numerical",
            "freeform"
          ]
        },
        "default": {
          "$id": "#/definitions/parameter/default",
          "title": "Default Parameter Value",
          "description": "The default value of the parameter",
          "examples": [
            "irrig",
            5,
            [44, 32]
          ]
        },
        "choices": {
          "$id": "#/definitions/parameter/choices",
          "title": "Parameter Choices",
          "description": "If the parameter is a string type, then enumerate the choices for that parameter",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "irrig",
              "rf_highN"
            ]
          ]
        },
        "min": {
          "$id": "#/definitions/parameter/min",
          "title": "Parameter Min",
          "description": "If the parameter is a numeric type, state the inclusive min of parameter values",
          "type": "number",
          "examples": [
            5
          ]
        },
        "max": {
          "$id": "#/definitions/parameter/max",
          "title": "Parameter Max",
          "description": "If the parameter is a numeric type, state the inclusive max of parameter values",
          "type": "number",
          "examples": [
            10
          ]
        }
      },
      "additionalProperties": false
    },
    "output": {
      "$id": "#/definitions/output",
      "type": "object",
      "required": [
        "name",
        "display_name",
        "description",
        "type",
        "ontologies",
        "is_primary"
      ],
      "properties": {
        "name": {
          "$id": "#/definitions/output/name",
          "title": "Output variable Name",
          "description": "The name of the output variable",
          "type": "string",
          "examples": [
            "management_practice"
          ]
        },
        "display_name": {
          "$id": "#/definitions/output/display_name",
          "title": "Output variable Display Name",
          "description": "The user visible name of the output variable",
          "type": "string",
          "examples": [
            "Management Practice"
          ]
        },
        "description": {
          "$id": "#/definitions/output/description",
          "title": "Output variable Description",
          "description": "The description of the output variable",
          "type": "string",
          "examples": [
            "The management practice to model. rf_highN corresponds to a high nitrogen management  practice. irrig corresponds to a high nitrogen, irrigated management practice. rf_0N  corresponds to a subsistence management practice. rf_lowN corresponds to a low nitrogen  managemet practice."
          ]
        },
        "type": {
          "$id": "#/definitions/output/type",
          "title": "Output variable Type",
          "description": "The type of output variable",
          "enum": [
            "int",
            "float",
            "str",
            "boolean",
            "datetime",
            "lat",
            "lng",
            "country",
            "admin1",
            "admin2",
            "admin3"
          ]
        },
        "unit": {
          "$id": "#/definitions/output/unit",
          "title": "Unit",
          "description": "The unit of the output variable",
          "type": "string",
          "examples": [
            "degC"
          ]
        },
        "unit_description": {
          "$id": "#/definitions/output/unit_description",
          "title": "Unit Description",
          "description": "A short description of the unit",
          "type": "string",
          "examples": [
            "degrees Celcius"
          ]
        },
        "ontologies": {
          "$id": "#/definitions/output/ontologies",
          "title": "Ontology Components",
          "description": "The three ontological parts representing the concepts matched to this varible",
          "$ref": "#/definitions/ontology_components"
        },
        "is_primary": {
          "$id": "#/definitions/output/is_primary",
          "title": "Is Primary?",
          "description": "Does this variable represent data based on the primary time and location columns",
          "type": "boolean",
          "examples": [
            true
          ]
        },
        "additional_options": {
          "$id": "#/definitions/output/additional_options",
          "title": "Additional Options",
          "description": "Model specific extras",
          "type": "object",
          "additionalProperties": false
        },
        "data_resolution": {
          "$id": "#/definitions/output/data_resolution",
          "title": "Data Resolution",
          "description": "Spatial and temporal resolution of the data",
          "$ref": "#/definitions/output/definitions/resolution"
        },
        "choices": {
          "$id": "#/definitions/output/choices",
          "title": "Output variable choices",
          "description": "If the output variable is a string type, then enumerate the choices for that output variable",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "irrig",
              "rf_highN"
            ]
          ]
        },
        "min": {
          "$id": "#/definitions/output/min",
          "title": "Output variable Min",
          "description": "Inclusive min of output values",
          "type": "number",
          "examples": [
            5
          ]
        },
        "max": {
          "$id": "#/definitions/output/max",
          "title": "Output variable Max",
          "description": "Inclusive max of output values",
          "type": "number",
          "examples": [
            10
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "resolution": {
          "$id": "#/definitions/output/definitions/resolution",
          "type": "object",
          "properties": {
            "temporal_resolution": {
              "$id": "#/definitions/output/definitions/resolution/temporal_resolution",
              "title": "Temporal Resolution",
              "description": "Temporal resolution of the output",
              "enum": [
                "annual",
                "monthly",
                "dekad",
                "weekly",
                "daily",
                "other"
              ]
            },
            "spatial_resolution": {
              "$id": "#/definitions/output/definitions/resolution/spatial_resolution",
              "title": "Spatial Resolution",
              "description": "Spatial resolution of the output (in meters)",
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2,
              "examples": [
                [
                  20,
                  20
                ]
              ]
            }
          }
        }
      }
    },
    "qualifier_output": {
      "$id": "#/definitions/qualifier_output",
      "type": "object",
      "required": [
        "name",
        "display_name",
        "description",
        "type",
        "ontologies",
        "related_features"
      ],
      "properties": {
        "name": {
          "$id": "#/definitions/qualifier_output/name",
          "title": "Output Qualifier Column Name",
          "description": "The name of the output qualifier column in data file",
          "type": "string",
          "examples": [
            "service_type"
          ]
        },
        "display_name": {
          "$id": "#/definitions/qualifier_output/display_name",
          "title": "Output Qualifier Display Name",
          "description": "The user visible name of the output qualifier",
          "type": "string",
          "examples": [
            "Type of money service"
          ]
        },
        "description": {
          "$id": "#/definitions/qualifier_output/description",
          "title": "Output Qualifier Description",
          "description": "The description of the output qualifier",
          "type": "string",
          "examples": [
            "Type of money service used"
          ]
        },
        "type": {
          "$id": "#/definitions/qualifier_output/type",
          "title": "Output Qualifier Type",
          "description": "The type of the output qualifier",
          "enum": [
            "int",
            "float",
            "str",
            "boolean",
            "datetime",
            "lat",
            "lng",
            "country",
            "admin1",
            "admin2",
            "admin3"
          ]
        },
        "unit": {
          "$id": "#/definitions/qualifier_output/unit",
          "title": "Unit",
          "description": "The unit of the output qualifier",
          "type": "string",
          "examples": [
            "unitless"
          ]
        },
        "unit_description": {
          "$id": "#/definitions/qualifier_output/unit_description",
          "title": "Unit Description",
          "description": "A short description of the unit",
          "type": "string",
          "examples": [
            ""
          ]
        },
        "ontologies": {
          "$id": "#/definitions/qualifier_output/ontologies",
          "title": "Ontology Components",
          "description": "The three ontological parts representing the concepts matched to this output",
          "$ref": "#/definitions/ontology_components"
        },
        "related_features": {
          "$id": "#/definitions/qualifier_output/related_features",
          "title": "Related Features",
          "description": "The feature names that this data should be used as a qualifier for",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "maintainer": {
      "$id": "#/definitions/maintainer",
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "$id": "#/definitions/maintainer/properties/name",
          "title": "Model Maintainer Name",
          "description": "The full name of the model maintainer",
          "type": "string",
          "examples": [
            "Bob Fakename"
          ]
        },
        "email": {
          "$id": "#/definitions/maintainer/properties/email",
          "title": "Model Maintainer Email Address",
          "description": "Email address of the model maintainer",
          "type": "string",
          "examples": [
            "bob@fake.org"
          ]
        },
        "organization": {
          "$id": "#/definitions/maintainer/properties/organization",
          "title": "Model Maintainer Organization",
          "description": "Maintainer Organization",
          "type": "string",
          "examples": [
            "University of Fakeland"
          ]
        },
        "website": {
          "$id": "#/definitions/maintainer/properties/website",
          "title": "Model Maintainer Website",
          "description": "Model maintainer website",
          "type": "string",
          "examples": [
            "http://www.fake.org/"
          ]
        }
      },
      "additionalProperties": false
    },
    "geography": {
      "$id": "#/definitions/geography",
      "type": "object",
      "properties": {
        "country": {
          "$id": "#/definitions/geography/properties/country",
          "title": "Countries",
          "description": "List of countries covered by the model",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "Ethiopia",
              "South Sudan"
            ]
          ]
        },
        "admin1": {
          "$id": "#/definitions/geography/properties/admin1",
          "title": "Admin Level 1",
          "description": "List of admin level 1 regions covered by the model",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "Oromia",
              "Sidama",
              "Amhara"
            ]
          ]
        },
        "admin2": {
          "$id": "#/definitions/geography/properties/admin2",
          "title": "Admin Level 2",
          "description": "List of admin level 2 regions covered by the model",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "West Gojjam",
              "East Gojjam",
              "Agew Awi",
              "Arsi",
              "Bale",
              "Borana"
            ]
          ]
        },
        "admin3": {
          "$id": "#/definitions/geography/properties/admin3",
          "title": "Admin Level 3",
          "description": "List of admin level 3 regions covered by the model",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "Aminyaa",
              "Askoo",
              "Coole",
              "Galaanaa",
              "Qarsaa",
              "Qarcaa"
            ]
          ]
        }
      },
      "additionalProperties": false
    },
    "period": {
      "$id": "#/definitions/period",
      "title": "Date Range",
      "description": "Date range and resolution",
      "type": "object",
      "required": [
        "gte",
        "lte"
      ],
      "properties": {
        "gte": {
          "$id": "#/definition/output/gte",
          "title": "Start Time",
          "description": "Start Time (inclusive)",
          "type": "integer",
          "examples": [
            1234567890000
          ]
        },
        "lte": {
          "$id": "#/definition/output/lte",
          "title": "End Time",
          "description": "End Time (inclusive)",
          "type": "integer",
          "examples": [
            1234567890000
          ]
        }
      },
      "additionalProperties": false
    },
    "ontology_components": {
      "$id": "#/definitions/ontology_components",
      "type": "object",
      "required": [
        "concepts",
        "processes",
        "properties"
      ],
      "properties": {
        "concepts": {
          "$id": "#/definitions/ontology_components/concepts",
          "title": "Matched concepts",
          "description": "A list of concepts matched for this variable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/concept_match"
          }
        },
        "processes": {
          "$id": "#/definitions/ontology_components/processes",
          "title": "Matched Processes",
          "description": "A list of processes matched for this variable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/concept_match"
          }
        },
        "properties": {
          "$id": "#/definitions/ontology_components/properties",
          "title": "Matched Properties",
          "description": "A list of properties matched for this variable",
          "type": "array",
          "items": {
            "$ref": "#/definitions/concept_match"
          }
        }
      }
    },
    "concept_match": {
      "$id": "#/definitions/concept_match",
      "type": "object",
      "properties": {
        "name": {
          "$id": "#/definitions/concept_match/name",
          "title": "Concept Component Name",
          "description": "The name of the concept component in the ontology",
          "type": "string",
          "examples": [
            "wm/concept/humanitarian_assistance/food_aid"
          ]
        },
        "score": {
          "$id": "#/definitions/concept_match/score",
          "title": "Match Score",
          "description": "A score between 0 and 1 representing the strength of the match",
          "type": "number",
          "examples": [
            0.785829484462738
          ]
        }
      }
    }
  }
}
